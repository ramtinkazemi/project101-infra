name: 'deploy-infra-full-stack-singapore-non-prod'

env:
  TERRAFORM_VERSION: '1.6.6'
  TERRAGRUNT_VERSION: '0.54.11'
  GO_VERSION: '1.21.5'

  AWS_REGION: 'ap-southeast-1'
  AWS_ACCOUNT_ID: '211125726495'
  AWS_OIDC_ROLE: 'arn:aws:iam::211125726495:role/github-action-infra-role-ap-southeast-2'

  TG_CONFIG_PATH: 'config/sbs/singapore/non-prod/app1'
  TG_STACK_VERSION: 'main'
  TG_ALLOW_DISABLING: 'true'
  TG_DISABLED_COMPONENTS: ''
  TG_POST_RENDER_INIT: 'false'
  TG_ALLOW_RENDERING: 'false'
  TG_INIT_ARGS: '-reconfigure --terragrunt-non-interactive'
  TG_VALIDATE_ARGS: '--terragrunt-no-auto-init --terragrunt-non-interactive'
  TG_PLAN_ARGS: '--terragrunt-no-auto-init --terragrunt-non-interactive'
  TG_APPLY_ARGS: '--terragrunt-non-interactive'
  TG_DESTROY_ARGS: '--terragrunt-no-auto-init --terragrunt-non-interactive'

  RELEASE_BRANCH: 'main'
  TG_DESTROY: 'false'

on:
  workflow_dispatch:
    inputs:
      name:
        default: Debugging...
        description: "Running workflow manually"
  push:
    branches:
      - main
    paths:
      - 'config/sbs/singapore/non-prod/**.tf'
      - 'config/sbs/singapore/non-prod/**.hcl'   
  pull_request:
    branches:
      - main
    paths:
      - 'config/sbs/singapore/non-prod/**.tf'
      - 'config/sbs/singapore/non-prod/**.hcl'


permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  main:
    name: 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: AWS OIDC Provider
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_OIDC_ROLE }}
          role-session-name: github-actions-infra

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Terragrunt
        run: |
          wget -O /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          chmod +x /usr/local/bin/terragrunt
          terragrunt --version
          
      - name: Run Terragrunt Plan Deploy
        if: ${{ env.TG_DESTROY == 'false' }}
        run: make plan TG_DESTROY=false

      - name: Run Terragrunt Plan Destroy
        if: ${{ env.TG_DESTROY == 'true' }}
        run: make plan TF_DESTROY=true

      - name: Terragrunt Apply
        if: ${{ github.ref == format('refs/heads/{0}', env.RELEASE_BRANCH) && env.TG_DESTROY == 'false' }}
        run: make apply

      - name: Terragrunt Destroy
        if: ${{ github.ref == format('refs/heads/{0}', env.RELEASE_BRANCH) && env.TG_DESTROY == 'true' }}
        run: make destroy